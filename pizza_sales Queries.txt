--1. Retrieve the total number of orders placed.

     select count(order_id) as total_orders from orders;

--2. Calculate the total revenue generated from pizza sales.
select 
round(sum(order_details.quantity * pizzas.price))as total_Revenue from order_details
 join pizzas on pizzas.pizza_id = order_details.pizza_id

--3. Identify the highest-priced pizza.

select  pizza_types.name , pizzas.price from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id order by price desc limit 1

--4. Identify the most common pizza size ordered.
select pizzas.size , count(order_details.order_details_id) as order_count
 from pizzas 
join order_details on order_details.pizza_id = pizzas.pizza_id
 group by pizzas.size 
 order by order_count desc

--5. List the top 5 most ordered pizza types along with their quantities.

select pizza_types.name,sum(order_details.quantity) as orders
from pizza_types join pizzas on 
pizza_types.pizza_type_id = pizzas.pizza_type_id join order_details on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.name order by orders desc limit 5;

--6. Join the necessary tables to find the total quantity of each pizza category ordered.

select pizza_types.category,sum(order_details.quantity) as orders
from pizza_types join pizzas on 
pizza_types.pizza_type_id = pizzas.pizza_type_id join order_details on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category ;

--7. Determine the distribution of orders by hour of the day.

select count(order_id),hour(order_time) from orders
group by hour(order_time)

--8.  Join relevant tables to find the category-wise distribution of pizzas.
select category , count(name) from pizza_types
group by category

--9. Group the orders by date and calculate the average number of pizzas ordered per day.
select avg(quantity) from
(select orders.order_data, sum(order_details.quantity) as quantity from orders 
join order_details on order_details.order_id =orders.order_id 
group by orders.order_data) as order_quantity;

--10 Determine the top 3 most ordered pizza types based on revenue.

select pizza_types.name , sum(order_details.quantity*pizzas.price) as revenue
from pizza_types 
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.name order by revenue desc limit 3;


--11. Calculate the percentage contribution of each pizza type to total revenue.
SELECT 
    pizza_types.category,
    round(SUM(order_details.quantity * pizzas.price),3 )AS revenue,
    ROUND((SUM(order_details.quantity * pizzas.price) / (SELECT 
                    ROUND(SUM(order_details.quantity * pizzas.price),
                                2) AS total_Revenue
                FROM
                    order_details
                        JOIN
                    pizzas ON pizzas.pizza_id = order_details.pizza_id)) * 100,
            2) AS  Revenue_as_percent
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category
ORDER BY revenue DESC;


--12.  Analyze the cumulative revenue generated over time.

select order_data , sum(total_Revenue) over(order by order_data) as cum_revenue
from
(select orders.order_data,
round(sum(order_details.quantity * pizzas.price),2)as total_Revenue from order_details
 join pizzas on pizzas.pizza_id = order_details.pizza_id join orders
 on orders.order_id =order_details.order_id
 group by orders.order_data) as sales;

--13. Determine the top 3 most ordered pizza types based on revenue for each pizza category.
select category, name ,revenue from
(select category , name , revenue ,  
rank() over (partition by category order by revenue desc ) as top
from 
 (select pizza_types.category,pizza_types.name,
 sum((order_details.quantity)  * pizzas.price) as revenue
 from pizza_types join pizzas on pizza_types.pizza_type_id
 = pizzas.pizza_type_id join order_details on 
 order_details.pizza_id = pizzas.pizza_id 
 group by pizza_types.category, pizza_types.name) as a) as b 
 where top <=3 ;

